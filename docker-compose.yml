version: '3.8'
services:
  elasticsearch-service:
    image: microservice-platform-elasticsearch-service:1.0.0
    container_name: microservice-platform-elasticsearch-service
    env_file:
      - .env.global.dev
      - apps/elasticsearch-service/.env.dev
    environment:
      APP_ENV: dev
    networks:
      - microservice-platform-network
      
  job-service:
    image: microservice-platform-job-service:1.0.0
    container_name: microservice-platform-job-service
    env_file:
      - .env.global.dev
      - apps/job-service/.env.dev
    environment:
      APP_ENV: dev
    networks:
      - microservice-platform-network

  game-gateway:
    image: microservice-platform-game-gateway:1.0.0
    container_name: microservice-platform-game-gateway
    env_file:
      - .env.global.dev
      - apps/game-gateway/.env.dev
    environment:
      APP_ENV: dev
    networks:
      - microservice-platform-network

  game-service:
    image: microservice-platform-game-service:1.0.0
    container_name: microservice-platform-game-service
    env_file:
      - .env.global.dev
      - apps/game-service/.env.dev
    networks:
      - microservice-platform-network
    depends_on:
      - database
      - redis

  platform-gateway:
    image: microservice-platform-platform-gateway:1.0.0
    container_name: microservice-platform-platform-gateway
    env_file:
      - .env.global.dev
      - apps/platform-gateway/.env.dev
    environment:
      APP_ENV: dev
    networks:
      - microservice-platform-network
    depends_on:
      - database
      - redis

  user-service:
    image: microservice-platform-user-service:1.0.0
    container_name: microservice-platform-user-service
    env_file:
      - .env.global.dev
      - apps/user-service/.env.dev
    environment:
      APP_ENV: dev
    networks:
      - microservice-platform-network
    depends_on:
      - database
      - redis

  database:
    container_name: microservice-platform-database
    image: postgres:14.1
    restart: unless-stopped
    volumes:
      - microservice-platform-database:/var/lib/postgres
      - ./docker/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
      - 5400:5432
    networks:
      - microservice-platform-network

  redis:
    container_name: microservice-platform-event
    image: redis
    restart: unless-stopped
    ports:
      - 6381:6379
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - microservice-platform-network
    volumes:
      - microservice-platform-event:/data

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: ghcr.io/joeferner/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - 8081:8081
    networks:
      - microservice-platform-network
    volumes:
      - microservice-platform-event:/data

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - microservice-platform-network

  kafka:
    image: bitnami/kafka:latest
    ports:
      - '9092:9092'
      - '9093:9093'
    networks:
      - microservice-platform-network
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  kafka-ui:
    image: digitsy/kafka-magic
    ports:
      - '9000:80'
    networks:
      - microservice-platform-network
    environment:
      - bootstrapServers=kafka:9002,kafka:9093

  elasticsearch:
    image: elasticsearch:8.7.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - microservice-platform-network
    ports:
      - 9200:9200

  kibana:
    image: kibana:8.7.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200/
    networks:
      - microservice-platform-network
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

networks:
  microservice-platform-network:
    driver: bridge

volumes:
  microservice-platform-database:
    driver: local
  microservice-platform-event:
    driver: local
